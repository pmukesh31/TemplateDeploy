pipeline {
    agent any
    
    parameters {
        string(name: 'CONFIG_FILE_PATH', defaultValue: 'config_platform01.json', description: 'Path to the JSON configuration file in the repo')
    }
    
    environment {
        AZURE_CRED = credentials('jenkins-sp')
        GITHUB_REPO = 'https://github.com/pmukesh31/TemplateDeploy.git'
    }
    
    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git branch: 'master', url: GITHUB_REPO
                }
            }
        }
        
        stage('Read Config File') {
            steps {
                script {
                    def configFilePath = "${params.CONFIG_FILE_PATH}"
                    def parametersFilePath = 'parametersStorage.json'
                    
                    // Read and debug config JSON file
                    def configFile = readFile(configFilePath)
                    echo "Config File Content: ${configFile}"
                    
                    // Read and debug parameters JSON file
                    def parametersFile = readFile(parametersFilePath)
                    echo "Parameters File Content: ${parametersFile}"
                    
                    def configJson = readJSON text: configFile
                    def parametersJson = readJSON text: parametersFile
                    
                    // Update parameters with config values
                    parametersJson.parameters.each { key, param ->
                        if (configJson.containsKey(key)) {
                            parametersJson.parameters[key].value = configJson[key]
                        }
                    }
                    
                    // Manually create combined parameters JSON string
                   writeJSON file: 'parametersStorage.json', json: parametersJson, pretty: 4
                }
            }
        }
        
        stage('Deploy ARM Template') {
            steps {
                script {
                    echo 'Deploying ARMs template...'
                    bat """
                    az login --service-principal -u %AZURE_CRED_CLIENT_ID% -p %AZURE_CRED_CLIENT_SECRET% --tenant %AZURE_CRED_TENANT_ID%
                    """
                    
                    // Use escaped single quotes to handle JSON string in bat script
                    bat """
                    az deployment group create --resource-group DefaultResourceGroup-CID --template-file storage_account_template.json --parameters parametersStorage.json
                    """
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo 'Cleaning up workspace...'
                try {
                    cleanWs() // Clean the workspace after the pipeline finishes
                } catch (Exception e) {
                    echo "Failed to clean workspace: ${e.getMessage()}"
                }
            }
        }
    }
}
